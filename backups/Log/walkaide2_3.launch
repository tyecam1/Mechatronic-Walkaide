<launch>
  <!-- Global ROS Parameters (from your original walkaide.launch) -->
  <rosparam param="log_to_rosout_level">2</rosparam>   
  <rosparam param="camera/enable_theora">false</rosparam>
  <rosparam param="camera/auto_exposure">false</rosparam>
  <rosparam param="rtabmap/DetectionRate">2.5</rosparam>
  <rosparam param="rtabmap/Grid/CellSize">0.1</rosparam>
  <rosparam param="rtabmap/Grid/RangeMax">3.0</rosparam>
  <rosparam param="rtabmap/IMU/Rate">238</rosparam>
  <rosparam param="rtabmap/IMU/BufferSize">100</rosparam>
  <rosparam param="rtabmap/OdomF2M/MaxSize">5000</rosparam>
  <rosparam param="rtabmap/OdomF2M/BundleAdjustment">1</rosparam>
  <rosparam param="rtabmap/OdomF2M/BundleAdjustmentMaxFrames">10</rosparam>
  <rosparam param="Depth/ConfidenceThreshold">80</rosparam>
  <rosparam param="enable_theora">false</rosparam>
  <rosparam param="auto_exposure">true</rosparam>
  <rosparam param="rtabmap/rtabmap/publish_tf">false</rosparam>
  <rosparam param="rtabmap/rgbd_odometry/publish_tf">false</rosparam>
  <rosparam param="rtabmap/Grid/FromDepth">true</rosparam>  <!-- Skip grid map -->
  <rosparam param="rtabmap/odom_sensor_sync">true</rosparam>
  <rosparam param="rtabmap/ClearingDepth">true</rosparam> <!-- clear pointcloud on new frame -->
  <rosparam param="rtabmap/Mem/IncrementalMemory">false</rosparam>
  <rosparam param="rtabmap/DepthDecimation">true</rosparam>
  <rosparam param="rtabmap/Mem/STMSize">30</rosparam>
  <rosparam param="rtabmap/Mem/RehearsalSimilarity">0.35</rosparam>
  <rosparam param="rtabmap/LoopThr">0.09</rosparam>
  <rosparam param="rtabmap/Grid/RayTracing">true</rosparam>
  <rosparam param="rtabmap/RGBD/ProximityBySpace">true</rosparam>
  <rosparam param="rtabmap/RGBD/AngularUpdate">0.05</rosparam>
  <rosparam param="rtabmap/Grid/NoiseFilteringRadius">3.0</rosparam>
  <rosparam param="rtabmap/Grid/NoiseFilterMinNeighbors">40</rosparam>

  <!-- Common parameter -->
  <param name="wait_for_transform_duration" value="1.0" />
  
  <!-- ================= UNIVERSAL ARGUMENTS ================= -->
  <!-- RealSense arguments -->
  <arg name="align_depth" value="true"/>
  <arg name="enable_sync" value="true"/>
  <arg name="enable_gyro" value="false"/>
  <arg name="enable_accel" value="false"/>
  <arg name="enable_color" value="true"/>
  <arg name="enable_depth" value="true"/>
  <arg name="enable_infra" value="false"/>
  <arg name="enable_infra1" value="false"/>
  <arg name="enable_infra2" value="false"/>
  <arg name="enable_fisheye" value="false"/>
  <arg name="depth_fps" value="15"/>
  <arg name="color_fps" value="15"/>
  <arg name="publish_tf" value="true"/>
  <arg name="tf_publish_rate" value="30"/>
  <!-- usb_port_id declared only once here -->
  <arg name="usb_port_id" value=""/>
  <arg name="color_width" value="848"/>
  <arg name="color_height" value="480"/>
  <arg name="depth_width" value="848"/>
  <arg name="depth_height" value="480"/>

  <!-- Additional RealSense arguments -->
  <arg name="serial_no" value=""/>
  <arg name="device_type" value=""/>
  <arg name="json_file_path" value=""/>
  <arg name="camera" value="camera"/>
  <arg name="tf_prefix" value="$(arg camera)"/>
  <arg name="external_manager" value="false"/>
  <arg name="manager" value="realsense2_camera_manager"/>
  <arg name="output" value="screen"/>
  <arg name="respawn" value="false"/>
  <arg name="fisheye_width" value="-1"/>
  <arg name="fisheye_height" value="-1"/>
  <arg name="confidence_width" value="-1"/>
  <arg name="confidence_height" value="-1"/>
  <arg name="enable_confidence" value="true"/>
  <arg name="confidence_fps" value="-1"/>
  <arg name="infra_width" value="848"/>
  <arg name="infra_height" value="480"/>
  <arg name="infra_rgb" value="false"/>
  <arg name="fisheye_fps" value="-1"/>
  <arg name="infra_fps" value="30"/>
  <arg name="gyro_fps" value="-1"/>
  <arg name="accel_fps" value="-1"/>
  <arg name="enable_pointcloud" value="false"/>
  <arg name="pointcloud_texture_stream" value="RS2_STREAM_COLOR"/>
  <arg name="pointcloud_texture_index" value="0"/>
  <arg name="allow_no_texture_points" value="false"/>
  <arg name="ordered_pc" value="false"/>
  <arg name="filters" value=""/>
  <arg name="clip_distance" value="-2"/>
  <arg name="linear_accel_cov" value="0.01"/>
  <arg name="initial_reset" value="false"/>
  <arg name="reconnect_timeout" value="6.0"/>
  <arg name="wait_for_device_timeout" value="-1.0"/>
  <arg name="unite_imu_method" value=""/>
  <arg name="topic_odom_in" value="odom_in"/>
  <arg name="calib_odom_file" value=""/>
  <arg name="publish_odom_tf" value="true"/>

  <!-- Arduino Serial arguments -->
  <arg name="port" value="/dev/ttyACM0"/>
  <arg name="baud" value="57600"/>

  <!-- RTAB-Map arguments -->
  <arg name="rtabmap_args" value="--delete_db_on_start --Optimizer/GravitySigma 0.3"/>
  <arg name="depth_topic" value="/camera/aligned_depth_to_color/image_raw"/>
  <arg name="rgb_topic" value="/camera/color/image_raw"/>
  <arg name="camera_info_topic" value="/camera/color/camera_info"/>
  <arg name="approx_sync" value="true"/>
  <arg name="approx_sync_max_interval" value="0.02"/>
  <arg name="wait_imu_to_init" value="true"/>
  <arg name="imu_topic" value="/nano/imu_corrected"/>
  <arg name="queue_size" value="20"/>
  <arg name="sync_queue_size" value="10"/>
  <arg name="stereo" value="false"/>
  <arg name="depth" value="true"/>
  <arg name="subscribe_rgb" value="$(arg depth)"/>
  <arg name="rtabmap_viz" value="true"/>
  <arg name="rviz" value="false"/>
  <arg name="localization" value="false"/>
  <arg name="initial_pose" value=""/>
  <arg name="loc_thr" value="0.0"/>
  <arg name="use_sim_time" value="false"/>
  <arg name="cfg" value=""/>
  <arg name="gui_cfg" value="~/.ros/rtabmap_gui.ini"/>
  <arg name="rviz_cfg" value="$(find rtabmap_launch)/launch/config/rgbd.rviz"/>
  <arg name="frame_id" value="camera_link"/>
  <arg name="odom_frame_id" value=""/>
  <arg name="odom_frame_id_init" value=""/>
  <arg name="map_frame_id" value="map"/>
  <arg name="ground_truth_frame_id" value=""/>
  <arg name="ground_truth_base_frame_id" value=""/>
  <arg name="namespace" value="rtabmap"/>
  <arg name="database_path" value="~/.ros/rtabmap.db"/>
  <arg name="topic_queue_size" value="1"/>
  <arg name="odom_topic" value="odom"/>
  <arg name="wait_for_transform" value="0.2"/>
  <arg name="args" value=""/>
  <arg name="gdb" value="false"/>
  <arg name="launch_prefix" value=""/>
  <arg name="clear_params" value="true"/>
  <arg name="publish_tf_map" value="true"/>
  <arg name="odom_args" value=""/>
  <!-- ================= END UNIVERSAL ARGUMENTS ================= -->

  <!-- ===== Inlined rs_camera.launch ===== -->
  <group ns="$(arg camera)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <!-- Use universal args; do not redeclare usb_port_id or others -->
      <arg name="tf_prefix" value="$(arg tf_prefix)"/>
      <arg name="external_manager" value="$(arg external_manager)"/>
      <arg name="manager" value="$(arg manager)"/>
      <arg name="output" value="$(arg output)"/>
      <arg name="respawn" value="$(arg respawn)"/>
      <arg name="serial_no" value="$(arg serial_no)"/>
      <arg name="device_type" value="$(arg device_type)"/>
      <arg name="json_file_path" value="$(arg json_file_path)"/>
      <arg name="enable_pointcloud" value="$(arg enable_pointcloud)"/>
      <arg name="pointcloud_texture_stream" value="$(arg pointcloud_texture_stream)"/>
      <arg name="pointcloud_texture_index" value="$(arg pointcloud_texture_index)"/>
      <arg name="enable_sync" value="$(arg enable_sync)"/>
      <arg name="align_depth" value="$(arg align_depth)"/>
      <arg name="fisheye_width" value="$(arg fisheye_width)"/>
      <arg name="fisheye_height" value="$(arg fisheye_height)"/>
      <arg name="enable_fisheye" value="$(arg enable_fisheye)"/>
      <arg name="depth_width" value="$(arg depth_width)"/>
      <arg name="depth_height" value="$(arg depth_height)"/>
      <arg name="enable_depth" value="$(arg enable_depth)"/>
      <arg name="confidence_width" value="$(arg confidence_width)"/>
      <arg name="confidence_height" value="$(arg confidence_height)"/>
      <arg name="enable_confidence" value="$(arg enable_confidence)"/>
      <arg name="confidence_fps" value="$(arg confidence_fps)"/>
      <arg name="color_width" value="$(arg color_width)"/>
      <arg name="color_height" value="$(arg color_height)"/>
      <arg name="enable_color" value="$(arg enable_color)"/>
      <arg name="infra_width" value="$(arg infra_width)"/>
      <arg name="infra_height" value="$(arg infra_height)"/>
      <arg name="enable_infra" value="$(arg enable_infra)"/>
      <arg name="enable_infra1" value="$(arg enable_infra1)"/>
      <arg name="enable_infra2" value="$(arg enable_infra2)"/>
      <arg name="infra_rgb" value="$(arg infra_rgb)"/>
      <arg name="fisheye_fps" value="$(arg fisheye_fps)"/>
      <arg name="infra_fps" value="$(arg infra_fps)"/>
      <arg name="gyro_fps" value="$(arg gyro_fps)"/>
      <arg name="accel_fps" value="$(arg accel_fps)"/>
      <arg name="enable_gyro" value="$(arg enable_gyro)"/>
      <arg name="enable_accel" value="$(arg enable_accel)"/>
      <arg name="publish_tf" value="$(arg publish_tf)"/>
      <arg name="tf_publish_rate" value="$(arg tf_publish_rate)"/>
      <arg name="filters" value="$(arg filters)"/>
      <arg name="clip_distance" value="$(arg clip_distance)"/>
      <arg name="linear_accel_cov" value="$(arg linear_accel_cov)"/>
      <arg name="initial_reset" value="$(arg initial_reset)"/>
      <arg name="reconnect_timeout" value="$(arg reconnect_timeout)"/>
      <arg name="wait_for_device_timeout" value="$(arg wait_for_device_timeout)"/>
      <arg name="unite_imu_method" value="$(arg unite_imu_method)"/>
      <arg name="topic_odom_in" value="$(arg topic_odom_in)"/>
      <arg name="calib_odom_file" value="$(arg calib_odom_file)"/>
      <arg name="publish_odom_tf" value="$(arg publish_odom_tf)"/>
    </include>
  </group>
  <!-- ===== End of inlined rs_camera.launch ===== -->

  <!-- Arduino Serial Node -->
  <node name="serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
    <param name="port" value="$(arg port)"/>
    <param name="baud" value="$(arg baud)"/>
  </node>

  <!-- Delay to ensure RealSense initialization -->
  <param name="wait_for_camera_startup" command="$(eval 'sleep 3')" />

  <!-- Static Transforms -->
  <node pkg="tf" type="static_transform_publisher" name="tf_imu_to_camera"
        args="0 0 0 0 0 0 imu_link camera_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="tf_imu_to_base"
        args="0 0 0 0 0 0 imu_link base_link 100"/>

  <!-- Extended Kalman Filter (EKF) -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_imu">
    <param name="frequency" value="50"/> 
    <param name="two_d_mode" value="false"/>
    <param name="map_frame" value="map"/>
    <param name="odom_frame" value="odom"/>
    <param name="base_link_frame" value="base_link"/>
    <param name="world_frame" value="odom"/>
    <param name="imu0" value="/nano/imu_corrected"/>
    <param name="odom0" value="/rtabmap/odom"/>
    <rosparam>
      imu0_queue_size: 10
      odom0_queue_size: 10
      sensor_timeout: 0.2
      imu0_remove_gravitational_accelleration: true
      imu0_config: [false, false, false,
                    true, true, true,
                    false, false, false,
                    true, true, true,
                    true, true, true]
      odom0_config: [true, true, true,
                     false, false, false,
                     false, false, false,
                     false, false, false,
                     false, false, false]
      imu0_differential: false
      odom0_differential: false
    </rosparam>
    <remap from="/odometry/filtered" to="rtabmap/odom_filtered"/>
  </node>

  <!-- Delay for stabilization -->
  <param name="wait_for_imu_startup" command="$(eval 'sleep 3')" />

  <remap from="/rtabmap/odom" to="/rtabmap/odom_filtered"/>
  <node pkg="tf" type="static_transform_publisher" name="tf_odom_to_base"
        args="0 0 0 0 0 0 /rtabmap/odom_filtered base_link 100"/>

  <!-- ===== Inlined rtabmap.launch ===== -->
  <include file="$(find rtabmap_launch)/launch/rtabmap.launch">
    <arg name="rtabmap_args" value="$(arg rtabmap_args)"/>
    <arg name="depth_topic" value="$(arg depth_topic)"/>
    <arg name="rgb_topic" value="$(arg rgb_topic)"/>
    <arg name="camera_info_topic" value="$(arg camera_info_topic)"/>
    <arg name="approx_sync" value="$(arg approx_sync)"/>
    <arg name="approx_sync_max_interval" value="$(arg approx_sync_max_interval)"/>
    <arg name="wait_imu_to_init" value="$(arg wait_imu_to_init)"/>
    <arg name="imu_topic" value="$(arg imu_topic)"/>
    <arg name="queue_size" value="$(arg queue_size)"/>
    <arg name="sync_queue_size" value="$(arg sync_queue_size)"/>
  </include>
  <!-- ===== End of inlined rtabmap.launch ===== -->

  <!-- Obstacle Detection Node (Couldnt get pcl pointcloud library working on pi5 due to architecture) -->
  <node name="obstacle_detection" pkg="walkaide" type="obstacle_detection_pub.py">
  </node>


</launch>

